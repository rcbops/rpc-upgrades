---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Preflight check
  hosts: "hosts:all_containers"
  gather_facts: false
  user: root
  tasks:
    - name: Ping check
      ping:

- name: Openstack release check
  hosts: localhost
  gather_facts: false
  user: root
  tasks:
    - name: Get Openstack release
      shell: grep 'DISTRIB_RELEASE' /etc/openstack-release | sed -e 's/.*"\(.*\)"/\1/'
      register: openstack_release_return

    - name: Check Openstack release
      fail:
        msg: "Current Openstack release version is higher than Newton, and leapfrog isn't appliable."
      when: "{{ openstack_release_return.stdout | version_compare('14.0.0', '>=') }}"

- name: Ceph check
  hosts: "ceph_all:ceph_mon_container:ceph_osd_container"
  gather_facts: false
  user: root
  tasks:
    - name: check ceph exists
      fail:
        msg: "Not Implemented: leap upgrades where ceph is deployed is not implemented at this time."

- name: Check OSA OPS repo
  hosts: localhost
  gather_facts: false
  user: root
  tasks:
    - name: Install dependencies for uri module (pre Ansible 2.1)
      pip:
        name: httplib2
        state: present

    - name: Reaching OSA OPS git repo URL
      uri:
        url: https://github.com/openstack/openstack-ansible-ops.git
        return_content: yes
      register: osa_ops_repo

    - name: Check OSA OPS git repo URL
      fail:
        msg: "OSA OPS git repo doesn't work."
      when: 'not "{{ osa_ops_repo.status }}" == "200"'

- name: Check file system usage
  hosts: all
  gather_facts: false
  user: root
  tasks:
    - name: Gather filesystem used percentages
      shell: |
        df -h | tail -n +2 | sed s/%//g | awk '{if($5 > 97) print "Alert: "$5 "% full - "$0}'
      register: fs_check

    - name: Check if any filesystem is greater than 97% full
      debug:
        msg: >-
          The filesystem(s) found to be (nearly) full.
          Details: {{ item.split() | join(' ') }}
      failed_when: true
      when:
        - fs_check.stdout_lines
      with_items: "{{ fs_check.stdout_lines }}"
  tags:
    - leap-fs-check

- name: Ensure correct Glance auth version
  hosts: localhost
  gather_facts: false
  user: root
  tasks:
    - name: Set glance_swift_auth_version to 2 for CloudFiles
      script: "scripts/glance_auth_version.py"
      failed_when: script_response.rc not in [0,3]
      changed_when: script_response.rc == 3
      register: script_response
  tags:
    - cloudfiles-check

- name: Check for missing config
  hosts: localhost
  connection: local
  gather_facts: false
  user: root
  tasks:
    - name: Create a backup openstack_user_config.yml
      command: >
        cp /etc/openstack_deploy/openstack_user_config.yml
        /etc/openstack_deploy/openstack_user_config.yml.pre-leap
      args:
        creates: /etc/openstack_deploy/openstack_user_config.yml.pre-leap

    - name: Check for required keys in the openstack_user_config.yml
      script: "scripts/required_user_config_keys.py"
      failed_when: required_user_config_keys.rc not in [0, 3]
      changed_when: required_user_config_keys.rc == 3
      register: required_user_config_keys
  tags:
    - leap-key-check

- name: check duplicate nova flavor IDs
  hosts: utility_all[0]
  tasks:
    - name: Get duplicate flavor IDs
      shell: ". ~/openrc; nova {{ openrc_insecure | default(false) | bool | ternary('--insecure','') }} flavor-list | awk '$2 {print $2}' | uniq -D"
      register: flavor_check

    - name: Duplicate flavors exist
      fail: msg="Duplicated flavor IDs are detected."
      when: flavor_check.stdout != ""
