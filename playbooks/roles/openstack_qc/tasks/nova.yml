---
# Copyright 2018, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather nova service-list
  shell: "source ~/openrc; nova --insecure service-list"
  args:
    executable: /bin/bash
  register: nova_service_list
  delegate_to: "{{ groups['utility'][0] }}"

- name: Output nova service-list
  debug:
    var: nova_service_list.stdout_lines

## Check for any down status in service-list
## Need to set to fail/warn play if a nova service is down (jwagner)
## All should be enabled and up

- name: Check for any down Nova services
  shell: "source ~/openrc; nova --insecure service-list | egrep 'down'"
  args:
    executable: /bin/bash
  register: nova_service_down
  ignore_errors: yes
  delegate_to: "{{ groups['utility'][0] }}"

- name: Output nova service down
  debug:
    var: nova_service_down

- name: Gather running instances from mysql
  shell: "mysql -BN -e \"select uuid from instances where deleted=0 and vm_state='active' order by uuid\" nova"
  args:
    executable: /bin/bash
  register: running_instances
  delegate_to: "{{ groups['galera_all'][0] }}"

- name: Output running instances
  debug:
    var: running_instances.stdout_lines

- name: Gather instance-volume mappings from mysql
  shell: "mysql -e \"select v.id,v.provider_location,va.attached_host,va.instance_uuid,va.mountpoint from volumes v join volume_attachment va on v.id = va.volume_id where v.deleted = 0 and v.attach_status='attached'\" cinder"
  args:
    executable: /bin/bash
  register: instance_volume_mappings
  delegate_to: "{{ groups['galera_all'][0] }}"

- name: Output instance-volume mappings
  debug:
    var: instance_volume_mappings.stdout_lines
