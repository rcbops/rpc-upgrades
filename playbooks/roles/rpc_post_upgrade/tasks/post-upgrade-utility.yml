---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Ensure backup directory exists or create it if date has changed from pre playbook run
  file:
    path: "{{ backup_dir }}"
    state: directory

# Verify services are up and checking in
- name: Grab relevant output of openstack compute service list
  shell: |
    . {{ ansible_env.HOME }}/openrc
    openstack {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} compute service list -c Binary -c Host -c State -f value
  register: openstack_output
  failed_when: "openstack_output.rc != 0"

- name: Display output of openstack compute service list
  debug:
    var: openstack_output

  # TODO(evrardjp): Use something similar to
  # stdout_lines.find("down") != -1
- name: Fail if any compute service is in the down state
  fail:
    msg: "One or more compute services are in the down state. Check the output above for more detail."
  when: "'down' in '{{ item.split(' ')[-1] }}'"
  with_items: "{{ openstack_output.stdout_lines | default([]) }}"

- name: Grab relevant output of neutron agent-list
  shell: |
    . {{ ansible_env.HOME }}/openrc
    neutron {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} agent-list -c agent_type -c host -c alive -f value
  register: neutron_output
  failed_when: "neutron_output.rc != 0"

- name: Display output of neutron agent-list
  debug:
    var: neutron_output

- name: Fail if any of the neutron agents are down
  fail:
    msg: "One or more of the neutron agents are down. Check the output above for more detail."
  when: "'xxx' in '{{ item.split(' ')[-1] }}'"
  with_items: "{{ neutron_output.stdout_lines | default([]) }}"

- name: Grab relevant output of neutron port-list
  shell: |
    . {{ ansible_env.HOME }}/openrc
    neutron {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} port-list -c id -c binding:host_id -c device_owner -c status -f value
  register: neutron_port_output

- name: Warn if any neutron ports are in the build state
  fail:
    msg: "One or more of the neutron ports are in the build state"
  when: "'build' in (item.split(' ')[-1]|lower)"
  with_items: "{{ neutron_port_output.stdout|default([]) }}"
  ignore_errors: yes

- name: Write file listing ports in build status
  template:
    src: "neutron-port-status.txt.j2"
    dest: "{{ backup_dir }}/neutron_ports_in_build_status-{{ datetime_stamp }}.post-upgrade"
  delegate_to: localhost

# Note: As part of https://github.com/rcbops/u-suk-dev/issues/348,
# it has been realized that cinder services with the old hostname
# cannot be deleted. Because of this, any services
# with '_' in their hostnames must be disregarded as part of this check.
- name: Grab relevant output of cinder service-list
  shell: |
    . {{ ansible_env.HOME }}/openrc
    cinder {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} service-list | grep -vE 'Status|\+|_' | awk '{print $2, $4, $10}'
  register: cinder_output
  failed_when: "cinder_output.rc != 0"

- name: Display output of cinder service-list
  debug:
    var: cinder_output

- name: Fail if any of the cinder services are down
  fail:
    msg: "One or more of the cinder services are in the down state. Check the output above for more detail."
  when: "'down' in '{{ item.split(' ')[-1] }}'"
  with_items: "{{ cinder_output.stdout_lines | default([]) }}"

- name: Grab relevant output of orchestration service list
  shell: |
    . {{ ansible_env.HOME }}/openrc
    openstack {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} orchestration service list -c Binary -c host -c status -f value
  register: orchestration_output
  failed_when: "orchestration_output.rc != 0"

- name: Display output of orchestration service list
  debug:
    var: orchestration_output

- name: Fail if any of the orchestration services are down
  fail:
    msg: "One or more of the orchestration services are down. Check the output above for more detail."
  when: "'down' in '{{ item.split(' ')[-1] }}'"
  with_items: "{{ orchestration_output.stdout_lines | default([]) }}"

- name: Obtain a list of neutron routers
  shell: |
    . {{ ansible_env.HOME }}/openrc
    neutron {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} router-list -f value --column id
  register: neutron_routers

- name: Check agent assigned to each neutron router
  shell: |
    . {{ ansible_env.HOME }}/openrc
    neutron {{ openrc_insecure |default(false) |bool |ternary('--insecure','') }} l3-agent-list-hosting-router -f value --column host {{ item }}
  with_items: "{{ neutron_routers.stdout_lines|default([]) }}"
  register: neutron_routers_agents

- name: Write file containing agent for each router
  copy:
    content: "{{ item.stdout }}"
    dest: "{{ backup_dir }}/{{ item.item }}.post-upgrade"
  with_items: "{{ neutron_routers_agents.results|default([]) }}"
  delegate_to: localhost

- name: Get content of pre-upgrade files
  slurp:
    src: "{{ backup_dir }}/{{ item }}.pre-upgrade"
  register: neutron_routers_pre_slurp
  with_items: "{{ neutron_routers.stdout_lines|default([]) }}"
  delegate_to: localhost
  failed_when: false

- name: Render router status template
  template:
    src: "neutron-router-status.txt.j2"
    dest: "{{ backup_dir }}/neutron-router-status-{{ datetime_stamp }}.txt"
  delegate_to: localhost
